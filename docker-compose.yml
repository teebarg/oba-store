
services:
  traefik:
    image: traefik:v2.9
    command:
      - traefik
      - --entrypoints.dev.address=:4030
      - --providers.file.filename=/config.yml
      - --api.insecure=true
    ports:
      - 4050:4050
      - 4051:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./lb.yml:/config.yml:ro
    networks:
      - traefik-network

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./backend
    ports:
      - "9000:9000"
      - "7000:7000"
      - "7001:7001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - MEDUSA_ADMIN_CORS=*
      - MEDUSA_STORE_CORS=*
    # depends_on:
    #   - db

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    build:
      context: ./frontend
      args:
        - NODE_ENV=production
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  # db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: medusa
  #     POSTGRES_USER: medusa
  #     POSTGRES_PASSWORD: medusa
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata:

networks:
  traefik-network:
    name: traefik-network
    external: true
